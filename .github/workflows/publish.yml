name: Node.js Package

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # required for pushing tags/commits
      issues: write # required for release notes
      pull-requests: write # required if using PR comments
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for semantic-release to analyze commits

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.5

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0
          registry-url: https://registry.npmjs.org/
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Create .releaserc.json
        run: |
          cat > .releaserc.json << EOF
          {
            "branches": ["main"],
            "plugins": [
              ["@semantic-release/commit-analyzer", {
                "preset": "angular",
                "releaseRules": [
                  {"type": "feat", "release": "minor"},
                  {"type": "fix", "release": "patch"},
                  {"type": "docs", "release": "patch"},
                  {"type": "style", "release": "patch"},
                  {"type": "refactor", "release": "patch"},
                  {"type": "perf", "release": "patch"},
                  {"type": "test", "release": "patch"},
                  {"type": "build", "release": "patch"},
                  {"type": "ci", "release": "patch"},
                  {"breaking": true, "release": "major"}
                ],
                "parserOpts": {
                  "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"]
                }
              }],
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              "@semantic-release/npm",
              ["@semantic-release/git", {
                "assets": ["package.json", "CHANGELOG.md"],
                "message": "chore(release): \${nextRelease.version} [skip ci]\n\n\${nextRelease.notes}"
              }]
            ]
          }
          EOF

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
        run: npx semantic-release